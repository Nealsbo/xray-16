#include "common.h"
#include "iostructs\p_postpr.h"
/*
struct 	v2p
{
	half4 	color:		COLOR0;		// multiplier, color.w = noise_amount
	half4	gray:		COLOR1;		// (.3,.3,.3.,amount)
 	half2 	tc0: 		TEXCOORD0;	// base1 (duality)
 	half2 	tc1: 		TEXCOORD1;	// base2 (duality)
 	half2 	tc2: 		TEXCOORD2;	// base  (noise)
};
*/

uniform sampler2D 	s_base0;
uniform sampler2D 	s_base1;
uniform sampler2D 	s_noise;
uniform half4 		c_brightness;

//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
half4 	_main	( p_postpr I )
{
	half3	t_0 	= tex2D		(s_base0,I.Tex0).rgb;
	half3	t_1 	= tex2D		(s_base1,I.Tex1).rgb;	
	half3 	image	= (t_0+t_1)*0.5;					// add_d2
	half	gray 	= dot		(image,I.Gray.rgb);			// dp3
			image 	= lerp 		(float3(gray), image, I.Gray.w);		// mul/mad

	half4	t_noise	= tex2D		(s_noise, I.Tex2);	
	half3 	noised 	= image * t_noise.rgb * 2.0;                     		// mul_2x
			image	= lerp 	(noised, image, I.Color.w); 	// lrp ?
			image	= (image * I.Color.rgb + c_brightness.rgb) * 2.0;		// mad
//			image	= (image + c_brightness) * I.Color;		// mad ?

	// out
	//return  half4	(image.r,0,0,1);					// +mov
	return  half4	(image,1);					// +mov
}
